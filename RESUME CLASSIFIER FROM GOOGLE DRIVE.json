{
  "name": "Mabelka Google Drive",
  "nodes": [
    {
      "parameters": {
        "pollTimes": {
          "item": [
            {
              "mode": "everyMinute"
            }
          ]
        },
        "triggerOn": "specificFolder",
        "folderToWatch": {
          "__rl": true,
          "value": "1oHf-ijM_-Q1Widnu7drr8eB98SmrcfZc",
          "mode": "list",
          "cachedResultName": "Candidature Spontanée ",
          "cachedResultUrl": "https://drive.google.com/drive/folders/1oHf-ijM_-Q1Widnu7drr8eB98SmrcfZc"
        },
        "event": "fileCreated",
        "options": {}
      },
      "type": "n8n-nodes-base.googleDriveTrigger",
      "typeVersion": 1,
      "position": [
        -340,
        -460
      ],
      "id": "d7f241c9-22e7-4675-b196-e53baa2554e8",
      "name": "Google Drive Trigger",
      "credentials": {
        "googleDriveOAuth2Api": {
          "id": "mzeGpXjWcMgaZnlw",
          "name": "Google Drive account"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "7a835813-c7cb-4a72-9d5e-ef43add4c6d4",
              "leftValue": "={{ $('Google Drive').item.binary }}",
              "rightValue": "",
              "operator": {
                "type": "object",
                "operation": "exists",
                "singleValue": true
              }
            }
          ],
          "combinator": "or"
        },
        "options": {}
      },
      "id": "58de77eb-70fb-41f4-9d68-933844dfd364",
      "name": "Filter",
      "type": "n8n-nodes-base.filter",
      "typeVersion": 2.2,
      "position": [
        140,
        -460
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "b6a4fbec-40d7-488d-bd90-a6425904f54a",
              "leftValue": "={{ $('Filter').item.binary.data.fileExtension }}",
              "rightValue": "pdf",
              "operator": {
                "type": "string",
                "operation": "contains"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        380,
        -460
      ],
      "id": "5a296cc0-cd1b-4a62-b975-13f46af8c0bb",
      "name": "If"
    },
    {
      "parameters": {
        "operation": "pdf",
        "options": {}
      },
      "type": "n8n-nodes-base.extractFromFile",
      "typeVersion": 1,
      "position": [
        580,
        -560
      ],
      "id": "e58e27e4-4d92-44e0-8f2a-825573fcd997",
      "name": "Extract from File"
    },
    {
      "parameters": {
        "operation": "download",
        "fileId": {
          "__rl": true,
          "value": "={{ $json.id }}",
          "mode": "id"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleDrive",
      "typeVersion": 3,
      "position": [
        -80,
        -460
      ],
      "id": "7440d039-a759-46b9-85a5-d85c574dae44",
      "name": "Google Drive",
      "credentials": {
        "googleDriveOAuth2Api": {
          "id": "mzeGpXjWcMgaZnlw",
          "name": "Google Drive account"
        }
      }
    },
    {
      "parameters": {
        "documentId": {
          "__rl": true,
          "value": "1jBzg-sraRNzPQVLdKzQXlClu4DM7blH6_SN7gE1FUm4",
          "mode": "list",
          "cachedResultName": "Offre emploi",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1jBzg-sraRNzPQVLdKzQXlClu4DM7blH6_SN7gE1FUm4/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": "gid=0",
          "mode": "list",
          "cachedResultName": "Feuille 1",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1jBzg-sraRNzPQVLdKzQXlClu4DM7blH6_SN7gE1FUm4/edit#gid=0"
        },
        "filtersUI": {
          "values": [
            {
              "lookupColumn": "Ref",
              "lookupValue": "={{ $json.extractedNamePart }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.5,
      "position": [
        920,
        -560
      ],
      "id": "9bd8f742-e970-4798-b8ba-559449666b89",
      "name": "Google Sheets",
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "IjuX6O7mCP4KipqC",
          "name": "Google Sheets account"
        }
      }
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=Vous êtes un expert en ressources humaines spécialisé dans l’analyse et la classification des CV.\n\nAnalysez la pertinence du CV ci-dessous par rapport à l’intitulé du poste, à sa description et à l’entreprise mentionnée.\n\nObjectif :\n1.  Déterminez si le profil est adapté au poste.\n2.  Fournissez une évaluation concise sur **une seule ligne** au format suivant, en utilisant \"|\" comme séparateur :\n\n    Nom : [Nom du candidat] | Email : [email] | Téléphone : [téléphone] | Ville : [ville] | Niveau d’études : [ex : Bac+3, Bac+5…] | **Niveau d’expérience : [Total des mois d’expérience calculé]** | Pourcentage d’adéquation : [0 à 100 %] | Commentaire : [Justification en français avec les points forts / points faibles / manques éventuels]\n\n3.  Si une information spécifique (Nom, Email, Téléphone, Ville, Niveau d’études) est **totalement absente** du texte du CV, indiquez \"Non renseigné\" **uniquement** pour ce champ spécifique.\n4.  **TRÈS IMPORTANT : Le champ \"Niveau d’expérience\" DOIT être calculé.** Vous devez **impérativement additionner la durée en mois de TOUTES les expériences listées dans la section \"EXPERIENCES PROFESSIONNELLE\" du CV.**\n    *   Calculez la durée de chaque expérience individuelle en mois (par exemple, 07/2023 - 09/2023 = 3 mois).\n    *   Additionnez toutes ces durées pour obtenir le total en mois.\n    *   **Incluez TOUTES les expériences listées (stages, emplois, etc.) dans ce calcul, même si elles ne sont pas directement pertinentes pour le poste visé.**\n    *   Le résultat doit être un nombre suivi du mot \"mois\" (ex : \"15 mois\").\n    *   **N'écrivez PAS \"Non renseigné\" pour le niveau d'expérience**, sauf si la section \"EXPERIENCES PROFESSIONNELLE\" est totalement vide ou absente du CV. Si aucune expérience n'est listée, indiquez \"0 mois\".\n\nIntitulé du poste : {{ $json.Titre }}  \nDescription du poste : {{ $json.Description }}  \nEntreprise : {{ $json.Entreprise }}\n\nTexte du CV du candidat :  \n{{ $('Extract from File').item.json.text }}\n"
      },
      "type": "@n8n/n8n-nodes-langchain.chainLlm",
      "typeVersion": 1.5,
      "position": [
        1100,
        -560
      ],
      "id": "6df4d429-b5c9-4a51-a730-67e5596a210e",
      "name": "Basic LLM Chain2"
    },
    {
      "parameters": {
        "modelName": "models/gemini-2.0-flash",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
      "typeVersion": 1,
      "position": [
        1180,
        -340
      ],
      "id": "bd93378c-07c1-4352-940c-c5afa1c942bb",
      "name": "Google Gemini Chat Model2",
      "credentials": {
        "googlePalmApi": {
          "id": "Ne2SzjBYsbau3yXF",
          "name": "Google Gemini(PaLM) Api account"
        }
      }
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=You are an expert HR resume classifier. Review the resume text provided below and complete the following tasks:\n\nExtract the Candidate’s Name: Identify the candidate's full name from the resume text.\n\n\n\nFormat the Output: Return your result in this exact format:\n25 CV [Candidate Name]\nFor example:\n'25 CV John Doe'\n\nResume Text:\n{{ $('Extract from File').item.json.text }}"
      },
      "type": "@n8n/n8n-nodes-langchain.chainLlm",
      "typeVersion": 1.5,
      "position": [
        1700,
        -560
      ],
      "id": "1fc8c0c3-1019-49f5-9f6b-8c5546787e6d",
      "name": "Basic LLM Chain1"
    },
    {
      "parameters": {
        "modelName": "models/gemini-2.0-flash",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
      "typeVersion": 1,
      "position": [
        1780,
        -340
      ],
      "id": "abe6a056-c2fb-41a4-a573-0b0ae23d6a44",
      "name": "Google Gemini Chat Model",
      "credentials": {
        "googlePalmApi": {
          "id": "Ne2SzjBYsbau3yXF",
          "name": "Google Gemini(PaLM) Api account"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "return $input.all().map(item => {\n  // Get the text from the LLM response\n  const text = $input.first().json.text;\n\n  // Basic validation\n  if (!text || typeof text !== 'string') {\n    console.error(\"Missing or invalid LLM output text:\", text);\n    // Return an object indicating the error, adjust as needed\n    return { json: { error: \"Texte LLM manquant ou invalide\" } };\n  }\n\n  // Initialize an object to store the parsed data\n  const parsedData = {};\n  // Define expected keys based on your prompt (lowercase for matching)\n  // Use lowercase versions for robust matching, handle apostrophe variations\n  const keyMap = {\n      'nom': 'Nom',\n      'email': 'Email',\n      'téléphone': 'Téléphone',\n      'ville': 'Ville',\n      \"niveau d'études\": \"Niveau d’études\", // LLM might use ' or ’\n      \"niveau d’expérience\": \"Niveau d’expérience\", // LLM might use ' or ’\n      \"pourcentage d'adéquation\": \"Pourcentage d’adéquation\", // LLM might use ' or ’\n      'commentaire': 'Commentaire'\n  };\n  // Add alternate apostrophe spellings to the map pointing to the same target\n  keyMap[\"niveau d’études\"] = \"Niveau d’études\";\n  keyMap[\"niveau d’expérience\"] = \"Niveau d’expérience\";\n  keyMap[\"pourcentage d’adéquation\"] = \"Pourcentage d’adéquation\";\n\n\n  // Split the text into potential field sections based on \" | \"\n  const allStringParts = text.split(\" | \");\n\n  // Process each part\n  allStringParts.forEach((part, index) => {\n    const trimmedPart = part.trim();\n    if (!trimmedPart) return; // Skip empty parts if \" | | \" occurs\n\n    const separatorIndex = trimmedPart.indexOf(\" : \");\n\n    if (separatorIndex !== -1) {\n      // Found \" : \", so treat it as a key-value pair\n      let key = trimmedPart.substring(0, separatorIndex).trim().toLowerCase();\n      const value = trimmedPart.substring(separatorIndex + 3).trim(); // +3 to skip \" : \"\n\n      // Normalize different apostrophes in the key for matching\n      key = key.replace(/’/g, \"'\");\n\n      // Use the mapped key if available, otherwise keep the original (lowercase)\n      const outputKey = keyMap[key] || key; // Fallback to the extracted key if not in map\n      parsedData[outputKey] = value;\n\n    } else if (index === 0 && !parsedData['Nom']) {\n       // Did NOT find \" : \" AND it's the very first part AND \"Nom\" hasn't been set explicitly yet\n       // Assume this first part IS the name.\n       parsedData['Nom'] = trimmedPart;\n    }\n    // Ignore parts without \" : \" if they are not the first one, or if name already found\n  });\n\n  // Ensure all expected fields exist, setting default if missing\n  const finalOutput = {};\n  const expectedOutputKeys = [\n      'Nom', 'Email', 'Téléphone', 'Ville',\n      'Niveau d’études', 'Niveau d’expérience',\n      'Pourcentage d’adéquation', 'Commentaire'\n  ];\n\n  expectedOutputKeys.forEach(key => {\n      finalOutput[key] = parsedData[key] || \"Non renseigné\";\n  });\n\n  // Return the structured data\n  return {\n    json: finalOutput\n  };\n});"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1480,
        -560
      ],
      "id": "c3c4250d-9e56-44e1-a815-3fb3969a6540",
      "name": "Code"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=You are an expert HR resume classifier with a focus on evaluating professional experience. Your task is to thoroughly review the provided resume text and calculate the total number of months of professional experience listed within the resume. Follow these steps to complete the task:\n\nTask Overview:\nExtract the Relevant Job Experience:\n\nIdentify the positions listed within the resume.\n\nLook for the start and end dates of each job or the current employment status if the person is still employed.\n\nCapture the job title, company name, and dates.\n\nCalculate the Duration for Each Job:\n\nFor each job, calculate the number of months between the start date and the end date. If the person is currently employed, use the current date to determine the end date.\n\nIf the start or end date includes a specific day, ignore the days and focus on the months and years.\n\nIf only the month and year are provided, calculate the number of months between the two dates.\n\nSum the Total Months of Experience:\n\nAfter calculating the duration of each job in months, add up all the durations to get the total number of months of professional experience across all jobs.\n\nProvide a Clear Summary:\n\nAfter completing the calculations, summarize the total number of months of experience in a simple and clear format like \"41 months.\"\n\nImportant Note :  dont include intership or stage in the expereince when calculating it, only professional job experience.\nExample:\nGiven a resume text like this:\n\n1. Software Engineer, XYZ Corp (March 2020 - December 2022)\n   - Developed and implemented new features for the company's main product.\n\n2. Junior Developer, ABC Solutions (January 2018 - February 2020)\n   - Assisted in coding and maintaining software systems for clients.\n\n3. Intern, Tech Innovations (June 2017 - August 2017)\n   - Supported senior developers with project tasks and bug fixing.\nSteps to Follow:\n\nFor Job 1 (XYZ Corp):\n\nStart date: March 2020\n\nEnd date: December 2022\n\nDuration: From March 2020 to December 2022 → 33 months\n\nFor Job 2 (ABC Solutions):\n\nStart date: January 2018\n\nEnd date: February 2020\n\nDuration: From January 2018 to February 2020 → 25 months\n\nFor Job 3 (Tech Innovations):\n\nStart date: June 2017\n\nEnd date: August 2017\n\nDuration: From June 2017 to August 2017 → 3 months\n\nTotal Experience Calculation:\nTotal months of experience = 33 months (Job 1) + 25 months (Job 2) + 3 months (Job 3) = 61 months of experience.\n\nResume Text to Analyze:\n{{ $('Extract from File').item.json.text }}\n\nThe output should be in the following format:\nX Mois"
      },
      "type": "@n8n/n8n-nodes-langchain.chainLlm",
      "typeVersion": 1.5,
      "position": [
        2060,
        -560
      ],
      "id": "db2c13fa-6e4f-4bbe-9965-5c19ee2176a2",
      "name": "Basic LLM Chain"
    },
    {
      "parameters": {
        "modelName": "models/gemini-2.0-flash",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
      "typeVersion": 1,
      "position": [
        2160,
        -340
      ],
      "id": "e13a7d84-aaa0-41a7-bc8f-591db653d9b4",
      "name": "Google Gemini Chat Model1",
      "credentials": {
        "googlePalmApi": {
          "id": "Ne2SzjBYsbau3yXF",
          "name": "Google Gemini(PaLM) Api account"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "// Assuming the data is passed as input to the node\nconst responseText = $input.first().json.text ;\n\n// Regex pattern to match all occurrences of months (e.g., \"38 mois\", \"22 mois\", etc.)\nconst regex = /\\b(\\d+)\\s*(mois|months)\\b/g;\n\n// Initialize an array to store all matches\nlet match;\nlet lastMatch = null;\n\n// Iterate over all matches and store the last one\nwhile ((match = regex.exec(responseText)) !== null) {\n  lastMatch = match[1]; // This will capture the number of months (e.g., 38)\n}\n\n// If a last match was found, return it; otherwise, return an error\nif (lastMatch !== null) {\n  return { json: { totalMonths: `${lastMatch} mois` } };\n} else {\n  return { json: { error: \"Total months not found in the response text\" } };\n}\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        2440,
        -560
      ],
      "id": "aaca1714-6b6c-4a47-8038-d6084bf675b9",
      "name": "Code1"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "5852bcc9-3974-4a17-a8b0-54e228d857b3",
              "leftValue": "={{ $json.pourcentage_numeric }}",
              "rightValue": 70,
              "operator": {
                "type": "number",
                "operation": "gt"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        2880,
        -560
      ],
      "id": "6b770980-3503-4d29-a09c-776eb60ce33d",
      "name": "If1"
    },
    {
      "parameters": {
        "jsCode": "// Get the 'Pourcentage d’adéquation' from the first item\nconst pourcentageStr = $('Code').first().json['Pourcentage d’adéquation'] || '';\n\n// Clean it up: remove % and whitespace, then convert to number using parseFloat\nconst numericPourcentage = parseFloat(pourcentageStr.replace('%', '').trim());\n\n// Return the cleaned-up value as a number\nreturn {\n  json: {\n    pourcentage_numeric: numericPourcentage\n  }\n};\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        2660,
        -560
      ],
      "id": "37cec194-0c23-4426-9b74-ad288f547161",
      "name": "Code4"
    },
    {
      "parameters": {
        "content": "# PRENDRE L'OFFRE",
        "height": 220,
        "width": 340,
        "color": 3
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        720,
        -620
      ],
      "id": "be815bfa-76c3-434f-9aa9-a1769542ae03",
      "name": "Sticky Note4"
    },
    {
      "parameters": {
        "content": "# EXTRAIRE INFO DU CV",
        "height": 220,
        "width": 540,
        "color": 3
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        1060,
        -620
      ],
      "id": "49346f17-f97b-43bd-8b5a-bd82f747a2a6",
      "name": "Sticky Note6"
    },
    {
      "parameters": {
        "content": "# CHANGER NOM",
        "height": 220,
        "width": 340,
        "color": 4
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        1660,
        -620
      ],
      "id": "d2decd55-8c38-4a8f-b409-f361dd6f50df",
      "name": "Sticky Note8"
    },
    {
      "parameters": {
        "content": "# CALCUL EXP",
        "height": 220,
        "width": 500,
        "color": 4
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        2060,
        -620
      ],
      "id": "e234a46a-58f6-497a-9ba8-93d57f2aabf6",
      "name": "Sticky Note9"
    },
    {
      "parameters": {
        "content": "# CONVERT TO NUMBER",
        "height": 220,
        "width": 440,
        "color": 5
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        2580,
        -620
      ],
      "id": "41c60282-e02d-4877-a61c-93ff55a1de28",
      "name": "Sticky Note16"
    },
    {
      "parameters": {
        "operation": "append",
        "documentId": {
          "__rl": true,
          "value": "11GDGgfjxK5cJTmFIzu8aw5uE7wX-o8-GAb9x3ryqFDM",
          "mode": "list",
          "cachedResultName": "Liste des Candidats",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/11GDGgfjxK5cJTmFIzu8aw5uE7wX-o8-GAb9x3ryqFDM/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": "gid=0",
          "mode": "list",
          "cachedResultName": "Feuille 1",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/11GDGgfjxK5cJTmFIzu8aw5uE7wX-o8-GAb9x3ryqFDM/edit#gid=0"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "Nom": "={{ $('Code').item.json.Nom }}",
            "Ville": "={{ $('Code').item.json.Ville }}",
            "Email": "={{ $('Code').item.json.Email }}",
            "Emploi": "={{ $('Google Sheets').item.json.Emploi }}",
            "CV": "={{ $('Google Drive').item.json.webViewLink }}",
            "Téléphone ": "={{ \"'\"+$('Code').item.json[\"Téléphone\"] }}",
            "Formation": "={{ $('Code').item.json['Niveau d’études'] }}",
            "Expérience ": "={{ $('Code1').item.json.totalMonths }}",
            "Pourcentage ": "={{ $('Code4').item.json.pourcentage_numeric }}",
            "Commentaire ": "={{ $('Code').item.json.Commentaire }}"
          },
          "matchingColumns": [],
          "schema": [
            {
              "id": "Nom",
              "displayName": "Nom",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Emploi",
              "displayName": "Emploi",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Ville",
              "displayName": "Ville",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Téléphone ",
              "displayName": "Téléphone ",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Email",
              "displayName": "Email",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Formation",
              "displayName": "Formation",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Expérience ",
              "displayName": "Expérience ",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Pourcentage ",
              "displayName": "Pourcentage ",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Commentaire ",
              "displayName": "Commentaire ",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "CV",
              "displayName": "CV",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.5,
      "position": [
        3320,
        -660
      ],
      "id": "8ca9ef00-7c46-4a46-8112-8aaa44f2a0d4",
      "name": "Google Sheets11",
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "IjuX6O7mCP4KipqC",
          "name": "Google Sheets account"
        }
      }
    },
    {
      "parameters": {
        "operation": "move",
        "fileId": {
          "__rl": true,
          "value": "={{ $('Google Drive').item.json.id }}",
          "mode": "id"
        },
        "driveId": {
          "__rl": true,
          "mode": "list",
          "value": "My Drive"
        },
        "folderId": {
          "__rl": true,
          "value": "16lcr4IZJWUOu1RPTqaNaFMV9KAchclc1",
          "mode": "list",
          "cachedResultName": "Plus de 70%",
          "cachedResultUrl": "https://drive.google.com/drive/folders/16lcr4IZJWUOu1RPTqaNaFMV9KAchclc1"
        }
      },
      "type": "n8n-nodes-base.googleDrive",
      "typeVersion": 3,
      "position": [
        3100,
        -660
      ],
      "id": "4243d5ee-daf4-4943-ad18-24d7098a58e5",
      "name": "Google Drive5",
      "retryOnFail": true,
      "maxTries": 5,
      "credentials": {
        "googleDriveOAuth2Api": {
          "id": "mzeGpXjWcMgaZnlw",
          "name": "Google Drive account"
        }
      },
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "operation": "move",
        "fileId": {
          "__rl": true,
          "value": "={{ $('Google Drive').item.json.id }}",
          "mode": "id"
        },
        "driveId": {
          "__rl": true,
          "mode": "list",
          "value": "My Drive"
        },
        "folderId": {
          "__rl": true,
          "value": "1pvopYXDsAboHdPvtYF9b3ZcEEjj10-M5",
          "mode": "list",
          "cachedResultName": "Moins de 70%",
          "cachedResultUrl": "https://drive.google.com/drive/folders/1pvopYXDsAboHdPvtYF9b3ZcEEjj10-M5"
        }
      },
      "type": "n8n-nodes-base.googleDrive",
      "typeVersion": 3,
      "position": [
        3100,
        -460
      ],
      "id": "253fe38b-2062-4cdb-b4b2-bea68eae4cc3",
      "name": "Google Drive6",
      "retryOnFail": true,
      "maxTries": 5,
      "credentials": {
        "googleDriveOAuth2Api": {
          "id": "mzeGpXjWcMgaZnlw",
          "name": "Google Drive account"
        }
      },
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "jsCode": "// Get the first item passed from the previous node ('Google Drive')\nconst item = $('Google Drive').first();\n\n// --- Input Validation ---\n// Check if the item exists and has the expected 'json.name' property as a string.\n// If not, return an empty array to stop processing for this item gracefully.\nif (!item || !item.json || typeof item.json.name !== 'string') {\n  console.warn(\"Input item from 'Google Drive' node is missing, or 'json.name' is not a string.\");\n  // Returning an empty array means this execution path produces no output items.\n  return [];\n}\n\n// --- Core Logic ---\n// Get the text string from the item's data\nconst text = item.json.name; // e.g., \"Blue-CV-Qualite.pdf.pdf\"\n\n// Split the string into an array using the hyphen '-' as the delimiter\nconst parts = text.split('-'); // e.g., [\"Blue\", \"CV\", \"Qualite.pdf.pdf\"]\n\n// Get the first element from the array (index 0)\nconst firstWord = parts[0]; // e.g., \"Blue\"\n\n// --- Output ---\n// Return a *new* item structure containing ONLY the extracted word.\n// n8n expects items to be in an array, and data to be within a 'json' object.\nreturn [{\n  json: {\n    extractedNamePart: firstWord // You can rename 'extractedNamePart' if you like\n  }\n}];\n\n// --- Previous method (kept for reference) ---\n/*\n// This method *adds* the word to the existing data:\nitem.json.extractedFirstWord = firstWord;\nreturn item;\n*/"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        740,
        -560
      ],
      "id": "23216ea8-00a9-4f69-b898-872f3464df58",
      "name": "Code6"
    },
    {
      "parameters": {
        "operation": "append",
        "documentId": {
          "__rl": true,
          "value": "11GDGgfjxK5cJTmFIzu8aw5uE7wX-o8-GAb9x3ryqFDM",
          "mode": "list",
          "cachedResultName": "Liste des Candidats",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/11GDGgfjxK5cJTmFIzu8aw5uE7wX-o8-GAb9x3ryqFDM/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": "gid=0",
          "mode": "list",
          "cachedResultName": "Feuille 1",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/11GDGgfjxK5cJTmFIzu8aw5uE7wX-o8-GAb9x3ryqFDM/edit#gid=0"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "Nom": "={{ $('Code').item.json.Nom }}",
            "Ville": "={{ $('Code').item.json.Ville }}",
            "Email": "={{ $('Code').item.json.Email }}",
            "Emploi": "={{ $('Google Sheets').item.json.Emploi }}",
            "CV": "={{ $('Google Drive').item.json.webViewLink }}",
            "Téléphone ": "={{ \"'\"+$('Code').item.json[\"Téléphone\"] }}",
            "Formation": "={{ $('Code').item.json['Niveau d’études'] }}",
            "Expérience ": "={{ $('Code1').item.json.totalMonths }}",
            "Pourcentage ": "={{ $('Code4').item.json.pourcentage_numeric }}",
            "Commentaire ": "={{ $('Code').item.json.Commentaire }}"
          },
          "matchingColumns": [],
          "schema": [
            {
              "id": "Nom",
              "displayName": "Nom",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Emploi",
              "displayName": "Emploi",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Ville",
              "displayName": "Ville",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Téléphone ",
              "displayName": "Téléphone ",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Email",
              "displayName": "Email",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Formation",
              "displayName": "Formation",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Expérience ",
              "displayName": "Expérience ",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Pourcentage ",
              "displayName": "Pourcentage ",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Commentaire ",
              "displayName": "Commentaire ",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "CV",
              "displayName": "CV",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.5,
      "position": [
        3320,
        -460
      ],
      "id": "9c18884d-fdaa-4b76-be24-9e74ba460631",
      "name": "Google Sheets12",
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "IjuX6O7mCP4KipqC",
          "name": "Google Sheets account"
        }
      }
    },
    {
      "parameters": {
        "content": "# Download from Drive \n\n\n",
        "height": 280,
        "width": 360,
        "color": 5
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        340,
        -620
      ],
      "id": "f9e601dc-7e85-47ce-9774-25f95773da08",
      "name": "Sticky Note17"
    },
    {
      "parameters": {
        "content": "# Filtre with attachement \n",
        "height": 260,
        "width": 460,
        "color": 3
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -140,
        -580
      ],
      "id": "0f9d7670-c9d4-4c1a-a14c-7c7bb10bd644",
      "name": "Sticky Note5"
    },
    {
      "parameters": {
        "content": "## Moving, Change Name, Creating sheet",
        "height": 440,
        "width": 720,
        "color": 4
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        3040,
        -740
      ],
      "id": "463834a0-0d45-4c26-ae32-fd407d07cada",
      "name": "Sticky Note"
    },
    {
      "parameters": {
        "operation": "update",
        "fileId": {
          "__rl": true,
          "value": "={{ $('Google Drive5').item.json.id }}",
          "mode": "id"
        },
        "newUpdatedFileName": "={{ $('Basic LLM Chain1').item.json.text }}",
        "options": {}
      },
      "type": "n8n-nodes-base.googleDrive",
      "typeVersion": 3,
      "position": [
        3540,
        -660
      ],
      "id": "1179160f-bb30-4165-96e9-d2bf9ab82358",
      "name": "Google Drive8",
      "credentials": {
        "googleDriveOAuth2Api": {
          "id": "mzeGpXjWcMgaZnlw",
          "name": "Google Drive account"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "fileId": {
          "__rl": true,
          "value": "={{ $('Google Drive6').item.json.id }}",
          "mode": "id"
        },
        "newUpdatedFileName": "={{ $('Basic LLM Chain1').item.json.text }}",
        "options": {}
      },
      "type": "n8n-nodes-base.googleDrive",
      "typeVersion": 3,
      "position": [
        3520,
        -460
      ],
      "id": "e7e006ce-05a3-4d56-b7c3-d2ace1618703",
      "name": "Google Drive7",
      "credentials": {
        "googleDriveOAuth2Api": {
          "id": "mzeGpXjWcMgaZnlw",
          "name": "Google Drive account"
        }
      }
    }
  ],
  "pinData": {},
  "connections": {
    "Filter": {
      "main": [
        [
          {
            "node": "If",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Google Drive Trigger": {
      "main": [
        [
          {
            "node": "Google Drive",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If": {
      "main": [
        [
          {
            "node": "Extract from File",
            "type": "main",
            "index": 0
          }
        ],
        []
      ]
    },
    "Google Drive": {
      "main": [
        [
          {
            "node": "Filter",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extract from File": {
      "main": [
        [
          {
            "node": "Code6",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Basic LLM Chain2": {
      "main": [
        [
          {
            "node": "Code",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Google Gemini Chat Model2": {
      "ai_languageModel": [
        [
          {
            "node": "Basic LLM Chain2",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Basic LLM Chain1": {
      "main": [
        [
          {
            "node": "Basic LLM Chain",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Google Gemini Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "Basic LLM Chain1",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Code": {
      "main": [
        [
          {
            "node": "Basic LLM Chain1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Basic LLM Chain": {
      "main": [
        [
          {
            "node": "Code1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Google Gemini Chat Model1": {
      "ai_languageModel": [
        [
          {
            "node": "Basic LLM Chain",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Code1": {
      "main": [
        [
          {
            "node": "Code4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code4": {
      "main": [
        [
          {
            "node": "If1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Google Sheets": {
      "main": [
        [
          {
            "node": "Basic LLM Chain2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Google Drive5": {
      "main": [
        [
          {
            "node": "Google Sheets11",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If1": {
      "main": [
        [
          {
            "node": "Google Drive5",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Google Drive6",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Google Drive6": {
      "main": [
        [
          {
            "node": "Google Sheets12",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code6": {
      "main": [
        [
          {
            "node": "Google Sheets",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Google Sheets11": {
      "main": [
        [
          {
            "node": "Google Drive8",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Google Sheets12": {
      "main": [
        [
          {
            "node": "Google Drive7",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": true,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "df53be93-5e4a-4378-92ef-3406d3017f4e",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "e6583a395e5b1c97688693524f9ad8ee3634a2c179e3adecba31d3d84dea50b0"
  },
  "id": "tGu9q1BDb5B9yt72",
  "tags": []
}